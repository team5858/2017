// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5858.SteamworksBot;

import org.usfirst.frc5858.SteamworksBot.commands.AutoPutGearOnPeg;
import org.usfirst.frc5858.SteamworksBot.commands.CameraCenter;
import org.usfirst.frc5858.SteamworksBot.commands.CameraDown;
import org.usfirst.frc5858.SteamworksBot.commands.CameraLeft;
import org.usfirst.frc5858.SteamworksBot.commands.CameraRight;
import org.usfirst.frc5858.SteamworksBot.commands.CameraUp;
import org.usfirst.frc5858.SteamworksBot.commands.ClimbDown;
import org.usfirst.frc5858.SteamworksBot.commands.ClimbStop;
import org.usfirst.frc5858.SteamworksBot.commands.ClimbUp;
import org.usfirst.frc5858.SteamworksBot.commands.CloseGearbasket;
import org.usfirst.frc5858.SteamworksBot.commands.DrivetrainFast;
import org.usfirst.frc5858.SteamworksBot.commands.DrivetrainSlow;
import org.usfirst.frc5858.SteamworksBot.commands.FloorOff;
import org.usfirst.frc5858.SteamworksBot.commands.FloorOn;
import org.usfirst.frc5858.SteamworksBot.commands.FloorToggle;
import org.usfirst.frc5858.SteamworksBot.commands.GearBasketToggle;
import org.usfirst.frc5858.SteamworksBot.commands.KickMotorOff;
import org.usfirst.frc5858.SteamworksBot.commands.KickMotorOn;
import org.usfirst.frc5858.SteamworksBot.commands.OpenGearbasket;
import org.usfirst.frc5858.SteamworksBot.commands.ShooterOff;
import org.usfirst.frc5858.SteamworksBot.commands.ShooterOn;
import org.usfirst.frc5858.SteamworksBot.commands.ShooterToggle;
import org.usfirst.frc5858.SteamworksBot.commands.TestMotor;
import org.usfirst.frc5858.SteamworksBot.commands.TestMotorOff;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.JoystickButton;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);

    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.

    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:

    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());

    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());

    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    Joystick joystick = new Joystick(0);
    Joystick copilotJoystick = new Joystick(1);
//    JoystickButton openButton = new JoystickButton(joystick, 3);
//    JoystickButton closeButton = new JoystickButton(joystick,4);
//    JoystickButton gotozero = new JoystickButton(joystick,9);
//    JoystickButton goto180 = new JoystickButton(joystick,11);
	
   
    //JoystickButton centerCameraButton = new JoystickButton(joystick,1);
    JoystickButton floorToggleButton = new JoystickButton(joystick,2);
    JoystickButton gearBasketButton = new JoystickButton(joystick,3);
    //JoystickButton upCameraButton = new JoystickButton(joystick,4);
    JoystickButton centerCameraButton = new JoystickButton(joystick,5);
    JoystickButton speedToggleButton = new JoystickButton(joystick,6);
    JoystickButton climbDownButton = new JoystickButton(joystick,7);
    JoystickButton climbUpButton = new JoystickButton(joystick,8);
    JoystickButton openGearbasketButton = new JoystickButton(joystick, 9);
    JoystickButton closeGearbasketButton = new JoystickButton(joystick, 10);

    
    JoystickButton shooterToggleCopilotButton = new JoystickButton(copilotJoystick,6);
    JoystickButton centerCameraCopilotButton = new JoystickButton(copilotJoystick,5);
    JoystickButton gearBasketCopilotButton = new JoystickButton(copilotJoystick,3);
    JoystickButton floorToggleCopilotButton = new JoystickButton(copilotJoystick,2);
    JoystickButton climbDownCopilotButton = new JoystickButton(copilotJoystick,7);
    JoystickButton climbUpCopilotButton = new JoystickButton(copilotJoystick,8);
    JoystickButton climbStopCopilotButton = new JoystickButton(copilotJoystick, 1);
    JoystickButton kickerButton = new JoystickButton(copilotJoystick, 9);
    
    JoystickButton testButton = new JoystickButton(joystick, 1);
    
    public OI() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    	centerCameraButton.whenPressed(new CameraCenter());
    	//floorToggleButton.whenPressed(new FloorToggle());
    	gearBasketButton.whenPressed(new GearBasketToggle());
    	//upCameraButton.whenPressed(new CameraUp());
    	//downCameraButton.whenPressed(new CameraDown());
    	 //shooterToggleButton.whenPressed(new ShooterToggle());
    	speedToggleButton.whenPressed(new DrivetrainSlow());
    	speedToggleButton.whenReleased(new DrivetrainFast());
    	climbDownButton.whenPressed(new ClimbDown());
    	climbUpButton.whenPressed(new ClimbUp());
    	climbDownButton.whenReleased(new ClimbStop());
    	climbUpButton.whenReleased(new ClimbStop());
    	gearBasketCopilotButton.whenPressed(new GearBasketToggle());
    	//floorToggleCopilotButton.whenPressed(new FloorToggle());
    	climbUpCopilotButton.whenPressed(new ClimbUp());
    	climbDownCopilotButton.whenPressed(new ClimbDown());
    	climbUpCopilotButton.whenReleased(new ClimbStop());
    	climbDownCopilotButton.whenReleased(new ClimbStop());
    	//shooterToggleCopilotButton.whenPressed(new ShooterToggle());
    	centerCameraCopilotButton.whenPressed(new CameraCenter());

    	openGearbasketButton.whenPressed(new OpenGearbasket());
    	closeGearbasketButton.whenPressed(new CloseGearbasket());
    	//kickerButton.whenPressed(new KickMotorOn());
    	//kickerButton.whenReleased(new KickMotorOff());
    	
    	//testButton.whenPressed(new TestMotor());
    	//testButton.whenReleased(new TestMotorOff());
    	
    	
    	
    	
    	//gotozero.whenPressed(new GoToAngle(0));
        //goto180.whenPressed(new GoToAngle(180));
    	
    	// Temporary Serial Test
    	//gotozero.whenPressed(new TestSerial());
        
        // SmartDashboard Buttons
        SmartDashboard.putData("CloseGearbasket", new CloseGearbasket());
        SmartDashboard.putData("OpenGearbasket", new OpenGearbasket());
        SmartDashboard.putData("Autonomous Command", new AutoPutGearOnPeg());
        //SmartDashboard.putData("Drive", new Drive());
        //SmartDashboard.putData("TurnToAngle", new TurnToAngle());
        SmartDashboard.putData("CameraLeft", new CameraLeft());
        SmartDashboard.putData("CameraRight", new CameraRight());
        SmartDashboard.putData("CameraUp", new CameraUp());
        SmartDashboard.putData("CameraDown", new CameraDown());
        SmartDashboard.putData("ShooterOn", new ShooterOn());
        SmartDashboard.putData("ShooterOff", new ShooterOff());
        //SmartDashboard.putData("HopperOn", new HopperOn());
        //SmartDashboard.putData("HopperOff", new HopperOff());
        SmartDashboard.putData("FloorOn", new FloorOn());
        SmartDashboard.putData("FloorOff", new FloorOff());
        SmartDashboard.putData("ClimbOn", new ClimbUp());
        SmartDashboard.putData("ClimbDown", new ClimbDown());
        
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}

